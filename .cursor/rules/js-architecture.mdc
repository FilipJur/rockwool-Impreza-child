---
description: JavaScript module architecture and patterns
globs: ["src/js/**/*.js"]
alwaysApply: false
---

# JavaScript Module Architecture

## Module Creation Pattern

When creating new JS modules, always follow this structure:

```javascript
import { api } from '../utils/api.js';
import { validation } from '../utils/validation.js';

export class ModuleName {
  constructor() {
    this.isInitialized = false;
    this.init();
  }

  init() {
    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', () => this.setup());
    } else {
      this.setup();
    }
  }

  setup() {
    if (this.setupElements()) {
      this.bindEvents();
      this.isInitialized = true;
      console.log('ModuleName initialized');
    }
  }

  setupElements() {
    if (!document.querySelector('.required-selector')) {
      console.warn('Required elements not found');
      return false;
    }
    return true;
  }

  bindEvents() {
    // Event listeners here
    document.querySelector('.btn').addEventListener('click', this.handleClick.bind(this));
  }

  handleClick() {
    // Handle events
  }

  isReady() {
    return this.isInitialized;
  }

  destroy() {
    this.isInitialized = false;
    console.log('ModuleName destroyed');
  }
}
```

## Registration in main.js

Add to initializeModules():

```javascript
if (document.querySelector('.required-selector')) {
  try {
    this.modules.moduleName = new ModuleName();
    console.log('ModuleName initialized');
  } catch (error) {
    console.error('Failed to initialize ModuleName:', error);
  }
}
```

## Utility Usage

- Use vanilla JS DOM APIs for element selection and manipulation
- Use `api.*` for AJAX requests  
- Use `validation.*` for form validation
- All user-facing text in Czech