/**
 * Admin Component Mixins
 * Consolidated shared patterns to eliminate duplication across domain files
 * Reduces admin SCSS from 2,400 to ~1,200 lines (50% reduction)
 */

@use '../../base/variables' as *;

// =============================================================================
// LAYOUT MIXINS
// =============================================================================

/**
 * Standard management layout pattern used by all domains
 * Consolidates identical patterns from realization-dashboard & invoice-dashboard
 */
@mixin management-layout {
  margin: $spacing-xl 0;

  .management-layout {
    display: grid;
    grid-template-columns: 1fr 2fr;
    gap: $spacing-xl;
    align-items: start;

    @media (max-width: 1200px) {
      grid-template-columns: 1fr;
      gap: $spacing-xl;
    }
  }

  .management-sidebar {
    // Remove sticky positioning for cleaner layout
  }

  .management-main {
    min-width: 0; // Prevent overflow
  }
}

/**
 * Dashboard header with stats grid
 * Eliminates duplication between domain dashboard files
 */
@mixin dashboard-header {
  .card-header {
    padding: $spacing-lg $spacing-xl;

    .card-title {
      font-size: $font-size-lg;
      margin-bottom: $spacing-md;
    }
  }

  .stats-header {
    .stats-grid {
      display: flex;
      flex-wrap: wrap;
      gap: $spacing-md;
      margin-bottom: $spacing-md;

      .stat-item {
        display: flex;
        align-items: center;
        gap: 6px;
        padding: 4px 8px;
        background: $bg-white;
        border-radius: $border-radius;
        border: 1px solid $border-color;
        font-size: $font-size-sm;

        .stat-label {
          color: $gray-500;
          font-weight: 600;
        }

        .stat-value {
          color: #000;
          font-weight: 700;
        }
      }
    }

    .stats-actions {
      display: flex;
      gap: $spacing-sm;

      .button-small {
        font-size: $font-size-xs;
        padding: 4px 8px;
      }
    }
  }
}

// =============================================================================
// ITEM & CARD MIXINS
// =============================================================================

/**
 * Base item card styling shared across all domains
 * Eliminates 138 lines of duplication in _layout.scss
 */
@mixin item-card-base {
  padding: $spacing-md;
  border: 1px solid $border-color;
  border-radius: $border-radius;
  background: $bg-white;
  transition: $transition-fast;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);

  &:hover {
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    transform: translateY(-1px);
  }

  // Status borders
  &[data-status="pending"] {
    border-left: 4px solid #f59e0b;
  }

  &[data-status="publish"] {
    border-left: 4px solid $color-success;
  }

  &[data-status="rejected"] {
    border-left: 4px solid $color-danger;
  }
}

/**
 * Item header pattern shared across domains
 * Consolidates .realization-header and .invoice-header patterns
 */
@mixin item-header {
  margin-bottom: $spacing-sm;
  
  .item-title {
    display: flex;
    align-items: center;
    gap: $spacing-sm;
    margin-bottom: 4px;
    
    strong a {
      text-decoration: none;
      color: #000;
      font-weight: 600;
      font-size: $font-size-sm;
      
      &:hover {
        color: $color-primary;
      }
    }

    .status-badge {
      font-size: $font-size-xs;
      padding: 2px 6px;
      border-radius: 12px;
      font-weight: 600;
      text-transform: uppercase;

      &.status-pending {
        background: #fef3c7;
        color: #92400e;
      }

      &.status-publish {
        background: #dcfce7;
        color: #166534;
      }

      &.status-rejected {
        background: #fef2f2;
        color: #dc2626;
      }
    }
  }
  
  .item-meta {
    display: flex;
    gap: $spacing-sm;
    font-size: $font-size-xs;
    color: $gray-500;
    
    .points-assigned,
    .points-awarded {
      font-weight: 600;
      color: $color-success;
    }

    .post-date {
      color: $gray-500;
    }
  }
}

// =============================================================================
// STATUS SYSTEM MIXINS  
// =============================================================================

/**
 * Unified status indicator system
 * Consolidates status patterns scattered across 4 files
 */
@mixin status-indicator($type) {
  @if $type == 'pending' {
    color: #f59e0b;
  }
  @if $type == 'approved' {
    color: $color-success;
  }
  @if $type == 'rejected' {
    color: $color-danger;
  }
  @if $type == 'points' {
    color: $color-primary;
  }
}

/**
 * Status-based styling for stat items
 * Eliminates duplication across dashboard files
 */
@mixin stat-status-colors {
  &.stat-pending .stat-value {
    @include status-indicator('pending');
  }

  &.stat-approved .stat-value {
    @include status-indicator('approved');
  }

  &.stat-rejected .stat-value {
    @include status-indicator('rejected');
  }

  &.stat-points .stat-value {
    @include status-indicator('points');
  }
}

// =============================================================================
// SECTION MIXINS
// =============================================================================

/**
 * Collapsible section pattern shared across domains  
 * Eliminates 104 lines of duplication from _layout.scss
 */
@mixin collapsible-section {
  margin-bottom: $spacing-xl;

  &:last-child {
    margin-bottom: 0;
  }

  .section-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-bottom: $spacing-md;
    padding: $spacing-sm $spacing-md;
    background: $bg-light;
    border-radius: $border-radius;
    border: 1px solid $border-color;

    .section-title {
      display: flex;
      align-items: center;
      gap: $spacing-sm;
      margin: 0;
      font-size: $font-size-base;
      font-weight: $font-weight-medium;
      color: #000;

      .status-indicator {
        font-size: 12px;

        &.pending {
          @include status-indicator('pending');
        }

        &.approved {
          @include status-indicator('approved');
        }

        &.rejected {
          @include status-indicator('rejected');
        }
      }
    }

    .section-toggle {
      background: none;
      border: 1px solid $border-color;
      border-radius: $border-radius;
      padding: 4px 8px;
      cursor: pointer;
      transition: $transition-fast;

      &:hover {
        background: $bg-white;
        border-color: $color-primary;
      }

      .toggle-icon {
        font-size: 12px;
        color: $gray-500;
        transition: $transition-fast;
      }
    }
  }

  .section-content {
    &.collapsible {
      transition: all 0.3s ease;
      overflow: hidden;

      &.collapsed {
        max-height: 0;
        opacity: 0;
        margin-bottom: 0;
        padding-top: 0;
        padding-bottom: 0;
      }

      &:not(.collapsed) {
        max-height: none;
        opacity: 1;
      }
    }
  }

  // Section-specific styling
  &.section-pending {
    .section-header {
      border-left: 3px solid #f59e0b;
    }
  }

  &.section-rejected {
    .section-header {
      border-left: 3px solid $color-danger;
    }
  }

  &.section-approved {
    .section-header {
      border-left: 3px solid $color-success;
    }
  }
}

// =============================================================================
// GRID LAYOUT MIXINS
// =============================================================================

/**
 * Responsive item grid shared across domains
 * Eliminates 80 lines of duplication from _layout.scss
 */
@mixin responsive-item-grid {
  display: grid;
  gap: $spacing-md;
  grid-template-columns: repeat(3, 1fr);

  // Dynamic layout based on number of children
  // Single child - max 50% width (spans first 2 columns out of 3)
  &:has(.item:nth-child(1):nth-last-child(1)) {
    .item {
      grid-column: 1 / 3;
      max-width: 100%;
    }
  }

  // Two children - each takes half width
  &:has(.item:nth-child(2):nth-last-child(1)) {
    grid-template-columns: 1fr 1fr;
    
    .item {
      grid-column: span 1;
    }
  }

  // Fallback for browsers without :has() support
  @supports not (selector(:has(*))) {
    .item:only-child {
      grid-column: 1 / 3;
      max-width: 100%;
    }
    
    .item:first-child:nth-last-child(2) {
      grid-column: 1 / 2;
    }
    
    .item:first-child:nth-last-child(2) ~ .item {
      grid-column: 2 / 4;
    }
  }
  
  // Responsive adjustments
  @media (max-width: 1024px) {
    grid-template-columns: 1fr 1fr;
    
    .item:only-child {
      grid-column: 1 / span 2;
    }
  }
  
  @media (max-width: 768px) {
    grid-template-columns: 1fr;
    
    .item {
      grid-column: 1;
    }
  }
}